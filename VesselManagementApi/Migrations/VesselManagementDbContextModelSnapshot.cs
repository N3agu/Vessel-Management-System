// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VesselManagementApi.Data;

#nullable disable

namespace VesselManagementApi.Migrations
{
    [DbContext(typeof(VesselManagementDbContext))]
    partial class VesselManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VesselManagementApi.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Example Cruises"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maritime Inc."
                        });
                });

            modelBuilder.Entity("VesselManagementApi.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImoNumber")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Tonnage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImoNumber")
                        .IsUnique();

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImoNumber = "1234567",
                            Name = "Ocean Explorer",
                            Tonnage = 5000m,
                            Type = "Cruise"
                        });
                });

            modelBuilder.Entity("VesselManagementApi.Models.ShipOwner", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("OwnerId", "ShipId");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipOwners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            ShipId = 1
                        });
                });

            modelBuilder.Entity("VesselManagementApi.Models.ShipOwner", b =>
                {
                    b.HasOne("VesselManagementApi.Models.Owner", "Owner")
                        .WithMany("ShipOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VesselManagementApi.Models.Ship", "Ship")
                        .WithMany("ShipOwners")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("VesselManagementApi.Models.Owner", b =>
                {
                    b.Navigation("ShipOwners");
                });

            modelBuilder.Entity("VesselManagementApi.Models.Ship", b =>
                {
                    b.Navigation("ShipOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
